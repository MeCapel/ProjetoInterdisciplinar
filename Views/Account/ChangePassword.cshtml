@using ProjetoInterdisciplinar.ViewModels;
@model ChangePasswordViewModel;

@{
    ViewData["Title"] = "Change password";
}

<!-- GRADIENT -->
<div class="container-fluid py-5" style="background: var(--custom-gradient);">
    <div class="container d-flex justify-content-center p-5">

        <div class="row">

            <!-- DIV -->
            <div class="border border-dark rounded-2 bg-white p-4" style="width: 50vw;">

                <!-- TITLE -->
                <div class="text-center">
                    <p class="fs-4 fs-md-2 fw-bold text-secondary">Mude a sua senha</p>
                </div>

                <form asp-action="ChangePassword" method="post">

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>


                    <!-- Email -->
                    <div class="form-group">
                        <label asp-for="Email" class="form-label"></label>
                        <input class="col-12 form-control border border-dark rounded-2 mb-4"
                               asp-for="Email" readonly>
                    </div>


                    <!-- Nova senha -->
                    <div class="form-group mb-4">
                        <label asp-for="NewPassword" class="form-label"></label>
                        <div class="position-relative">
                            <input id="password" class="col-12 form-control border border-dark rounded-2 pe-5" asp-for="NewPassword" type="password">
                            <i class="fa-regular fa-eye-slash position-absolute" id="eyeBtn" style=" top: 50%; right: 20px; transform: translateY(-50%); cursor: pointer;"></i>
                        </div>
                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                    </div>


                    <!-- Corfirme a nova senha -->
                    <div class="form-group mb-4">
                        <label asp-for="ConfirmNewPassword" class="form-label"></label>
                        <div class="position-relative">
                            <input id="confirmPassword" class="col-12 form-control border border-dark rounded-2 pe-5" asp-for="ConfirmNewPassword" type="password">
                            <i class="fa-regular fa-eye-slash position-absolute" id="eyeBtnConfirm" style=" top: 50%; right: 20px; transform: translateY(-50%); cursor: pointer;"></i>
                        </div>
                        <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                    </div>


                    <div class="container d-flex justify-content-center py-3">
                        <input class="col-3 btn btn-dark border border-dark" type="submit" value="Submit">
                    </div>

                    <div class="text-center">
                        <a asp-controller="Account" asp-action="VerifyEmail" class="text-decoration-none">Voltar</a>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>


<script>
    const eyeBtn = document.getElementById('eyeBtn');
    const password = document.getElementById('password');
    eyeBtn.addEventListener('click', function ()
    {
        const type = password.getAttribute('type') == 'password' ? 'text' : 'password';
        password.setAttribute('type', type);
        this.classList.toggle('fa-eye-slash');
        this.classList.toggle('fa-eye');
    });

    const eyeBtnConfirm = document.getElementById('eyeBtnConfirm');
    const confirmPassword = document.getElementById('confirmPassword');
    eyeBtnConfirm.addEventListener('click', function ()
    {
        const type = confirmPassword.getAttribute('type') == 'password' ? 'text' : 'password';
        confirmPassword.setAttribute('type', type);
        this.classList.toggle('fa-eye-slash');
        this.classList.toggle('fa-eye');
    });
</script>


@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}

